Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 41.05      0.16     0.16    48944     0.00     0.01  renderScan
 20.52      0.24     0.08 28966311     0.00     0.00  readN
 10.26      0.28     0.04  7831040     0.00     0.00  getColor
  6.41      0.31     0.03   762609     0.00     0.00  CP_d8
  5.13      0.33     0.02  2384737     0.00     0.00  cycle_cpu
  5.13      0.35     0.02   762609     0.00     0.00  comp
  2.57      0.36     0.01  4010199     0.00     0.00  getRegister
  2.57      0.37     0.01      607     0.02     0.02  readNN
  2.57      0.38     0.01        1    10.01   390.21  run_emulator
  1.28      0.38     0.01   793579     0.00     0.00  JR_NZ_r8
  1.28      0.39     0.01     1024     0.00     0.00  OR_C
  1.28      0.39     0.01        2     2.50     2.52  LDINDR_a16_A
  0.00      0.39     0.00  2384736     0.00     0.00  cycle_ppu
  0.00      0.39     0.00   794827     0.00     0.00  setHF
  0.00      0.39     0.00   794827     0.00     0.00  setNF
  0.00      0.39     0.00   794024     0.00     0.00  setZF
  0.00      0.39     0.00   793579     0.00     0.00  check_flag
  0.00      0.39     0.00   793579     0.00     0.00  cond_jmp_r8
  0.00      0.39     0.00   765350     0.00     0.00  setCF
  0.00      0.39     0.00   762433     0.00     0.00  LDH_A_a8
  0.00      0.39     0.00    48945     0.00     0.00  update_window
  0.00      0.39     0.00    48944     0.00     0.00  background_map_addr
  0.00      0.39     0.00    48944     0.00     0.00  tile_pattern_table_addr
  0.00      0.39     0.00    48944     0.00     0.00  window_enabled
  0.00      0.39     0.00    29053     0.00     0.00  read_r16
  0.00      0.39     0.00    28964     0.00     0.00  write_r16
  0.00      0.39     0.00    27409     0.00     0.00  writeN
  0.00      0.39     0.00    27036     0.00     0.00  LDDEC_HL_A
  0.00      0.39     0.00    21910     0.00     0.00  dec_8_reg
  0.00      0.39     0.00    18230     0.00     0.00  DEC_B
  0.00      0.39     0.00     8192     0.00     0.00  BIT_7_H
  0.00      0.39     0.00     8192     0.00     0.00  bit_n
  0.00      0.39     0.00     3259     0.00     0.00  DEC_C
  0.00      0.39     0.00     1948     0.00     0.00  load_n_to_reg
  0.00      0.39     0.00     1260     0.00     0.00  move
  0.00      0.39     0.00     1042     0.00     0.00  LD_A_d8
  0.00      0.39     0.00     1028     0.00     0.00  or_reg
  0.00      0.39     0.00     1024     0.00     0.00  DEC_BC
  0.00      0.39     0.00     1024     0.00     0.00  LD_A_B
  0.00      0.39     0.00      768     0.00     0.00  RL
  0.00      0.39     0.00      768     0.00     0.00  RLA
  0.00      0.39     0.00      768     0.00     0.00  RL_C
  0.00      0.39     0.00      483     0.00     0.00  writeNN
  0.00      0.39     0.00      403     0.00     0.00  LD_C_d8
  0.00      0.39     0.00      395     0.00     0.00  LD_E_d8
  0.00      0.39     0.00      384     0.00     0.02  POP_BC
  0.00      0.39     0.00      384     0.00     0.00  PUSH_BC
  0.00      0.39     0.00      384     0.00     0.02  pop_r16
  0.00      0.39     0.00      384     0.00     0.00  push_r16
  0.00      0.39     0.00      264     0.00     0.00  DEC_E
  0.00      0.39     0.00      256     0.00     0.00  inc_16_reg
  0.00      0.39     0.00      200     0.00     0.00  INC_HL
  0.00      0.39     0.00      200     0.00     0.00  LDINC_HL_A
  0.00      0.39     0.00      157     0.00     0.00  JR_Z_r8
  0.00      0.39     0.00      153     0.00     0.00  LDH_a8_A
  0.00      0.39     0.00      148     0.00     0.00  inc_8_reg
  0.00      0.39     0.00      134     0.00     0.00  sub_n
  0.00      0.39     0.00      133     0.00     0.00  LD_A_H
  0.00      0.39     0.00      132     0.00     0.00  DEC_D
  0.00      0.39     0.00      132     0.00     0.00  INC_H
  0.00      0.39     0.00      132     0.00     0.00  SUB_B
  0.00      0.39     0.00      105     0.00     0.00  LD_B_d8
  0.00      0.39     0.00       99     0.00     0.02  CALL_a16
  0.00      0.39     0.00       99     0.00     0.02  RET
  0.00      0.39     0.00       56     0.00     0.00  INC_DE
  0.00      0.39     0.00       56     0.00     0.00  LD_A_INDR_DE
  0.00      0.39     0.00       50     0.00     0.00  LD_A_E
  0.00      0.39     0.00       48     0.00     0.00  LD_C_A
  0.00      0.39     0.00       33     0.00     0.00  ADD_HL_DE
  0.00      0.39     0.00       33     0.00     0.00  add_16_reg
  0.00      0.39     0.00       25     0.00     0.00  DEC_A
  0.00      0.39     0.00       19     0.00     0.02  load_nn_to_reg
  0.00      0.39     0.00       16     0.00     0.00  LDINDR_C_A
  0.00      0.39     0.00       15     0.00     0.00  INC_C
  0.00      0.39     0.00       13     0.00     0.02  LD_HL_d16
  0.00      0.39     0.00       12     0.00     0.00  LDINC_A_INDR_HL
  0.00      0.39     0.00       12     0.00     0.00  indir_n_load
  0.00      0.39     0.00        5     0.00     0.00  JR_r8
  0.00      0.39     0.00        5     0.00     0.00  NOP
  0.00      0.39     0.00        4     0.00     0.00  OR_B
  0.00      0.39     0.00        4     0.00     0.00  SRL_A
  0.00      0.39     0.00        3     0.00     0.02  JP_a16
  0.00      0.39     0.00        3     0.00     0.02  LD_SP_d16
  0.00      0.39     0.00        2     0.00     0.00  AND_d8
  0.00      0.39     0.00        2     0.00     0.00  CCF
  0.00      0.39     0.00        2     0.00     0.00  LD_A_INDR_C
  0.00      0.39     0.00        2     0.00     0.02  LD_DE_d16
  0.00      0.39     0.00        2     0.00     0.00  LD_E_A
  0.00      0.39     0.00        2     0.00     0.00  LD_L_d8
  0.00      0.39     0.00        2     0.00     0.00  SUB_d8
  0.00      0.39     0.00        2     0.00     0.00  getCF
  0.00      0.39     0.00        1     0.00     0.00  AND_B
  0.00      0.39     0.00        1     0.00     0.00  DI
  0.00      0.39     0.00        1     0.00     0.00  INC_B
  0.00      0.39     0.00        1     0.00     0.02  JP_INDRHL
  0.00      0.39     0.00        1     0.00     0.00  LDINDR_HL_A
  0.00      0.39     0.00        1     0.00     0.00  LDINDR_HL_d8
  0.00      0.39     0.00        1     0.00     0.00  LD_A_INDRHL
  0.00      0.39     0.00        1     0.00     0.00  LD_A_L
  0.00      0.39     0.00        1     0.00     0.02  LD_BC_d16
  0.00      0.39     0.00        1     0.00     0.00  LD_B_INDRHL
  0.00      0.39     0.00        1     0.00     0.00  LD_D_A
  0.00      0.39     0.00        1     0.00     0.00  LD_D_d8
  0.00      0.39     0.00        1     0.00     0.00  LD_H_A
  0.00      0.39     0.00        1     0.00     0.00  NOT_IMPL
  0.00      0.39     0.00        1     0.00     0.00  RRCA
  0.00      0.39     0.00        1     0.00     0.00  initCPU
  0.00      0.39     0.00        1     0.00     0.00  init_gpu
  0.00      0.39     0.00        1     0.00     0.00  init_jmp
  0.00      0.39     0.00        1     0.00     0.00  init_ppu
  0.00      0.39     0.00        1     0.00     0.00  loadCart
  0.00      0.39     0.00        1     0.00     0.00  mmu_load_boot_rom
  0.00      0.39     0.00        1     0.00     0.00  panic
  0.00      0.39     0.00        1     0.00     0.00  printCard
  0.00      0.39     0.00        1     0.00     0.00  printCpu

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2020 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 2.56% of 0.39 seconds

index % time    self  children    called     name
                0.01    0.38       1/1           main [2]
[1]    100.0    0.01    0.38       1         run_emulator [1]
                0.00    0.27 2384736/2384736     cycle_ppu [3]
                0.02    0.10 2384737/2384737     cycle_cpu [5]
-----------------------------------------------
                                                 <spontaneous>
[2]    100.0    0.00    0.39                 main [2]
                0.01    0.38       1/1           run_emulator [1]
                0.00    0.00       1/1           printCard [116]
                0.00    0.00       1/1           init_gpu [111]
                0.00    0.00       1/1           initCPU [110]
                0.00    0.00       1/1           init_ppu [113]
                0.00    0.00       1/1           loadCart [114]
-----------------------------------------------
                0.00    0.27 2384736/2384736     run_emulator [1]
[3]     67.9    0.00    0.27 2384736         cycle_ppu [3]
                0.16    0.10   48944/48944       renderScan [4]
-----------------------------------------------
                0.16    0.10   48944/48944       cycle_ppu [3]
[4]     67.9    0.16    0.10   48944         renderScan [4]
                0.06    0.00 23493120/28966311     readN [6]
                0.04    0.00 7831040/7831040     getColor [8]
                0.00    0.00   48944/48944       window_enabled [95]
                0.00    0.00   48944/48944       tile_pattern_table_addr [94]
                0.00    0.00   48944/48944       background_map_addr [93]
                0.00    0.00   48944/48945       update_window [92]
-----------------------------------------------
                0.02    0.10 2384737/2384737     run_emulator [1]
[5]     29.5    0.02    0.10 2384737         cycle_cpu [5]
                0.03    0.03  762609/762609      CP_d8 [7]
                0.01    0.00  793579/793579      JR_NZ_r8 [12]
                0.01    0.00 2393701/28966311     readN [6]
                0.00    0.01     384/384         POP_BC [13]
                0.01    0.00       2/2           LDINDR_a16_A [15]
                0.01    0.00    1024/1024        OR_C [16]
                0.00    0.00  762433/762433      LDH_A_a8 [17]
                0.00    0.00      99/99          CALL_a16 [24]
                0.00    0.00      99/99          RET [25]
                0.00    0.00      13/13          LD_HL_d16 [28]
                0.00    0.00   18230/18230       DEC_B [29]
                0.00    0.00    8192/8192        BIT_7_H [30]
                0.00    0.00   27036/27036       LDDEC_HL_A [32]
                0.00    0.00       3/3           LD_SP_d16 [34]
                0.00    0.00       3/3           JP_a16 [33]
                0.00    0.00       2/2           LD_DE_d16 [35]
                0.00    0.00    3259/3259        DEC_C [36]
                0.00    0.00       1/1           JP_INDRHL [37]
                0.00    0.00       1/1           LD_BC_d16 [38]
                0.00    0.00     768/768         RL_C [42]
                0.00    0.00     768/768         RLA [44]
                0.00    0.00    1042/1042        LD_A_d8 [45]
                0.00    0.00    1024/1024        LD_A_B [46]
                0.00    0.00     264/264         DEC_E [47]
                0.00    0.00     403/403         LD_C_d8 [48]
                0.00    0.00     395/395         LD_E_d8 [49]
                0.00    0.00     132/132         SUB_B [50]
                0.00    0.00     132/132         DEC_D [53]
                0.00    0.00     132/132         INC_H [54]
                0.00    0.00     133/133         LD_A_H [55]
                0.00    0.00     105/105         LD_B_d8 [56]
                0.00    0.00     200/200         LDINC_HL_A [57]
                0.00    0.00     153/153         LDH_a8_A [58]
                0.00    0.00     157/157         JR_Z_r8 [59]
                0.00    0.00      56/56          LD_A_INDR_DE [60]
                0.00    0.00      25/25          DEC_A [61]
                0.00    0.00      50/50          LD_A_E [62]
                0.00    0.00      33/33          ADD_HL_DE [63]
                0.00    0.00      48/48          LD_C_A [65]
                0.00    0.00      15/15          INC_C [66]
                0.00    0.00      12/12          LDINC_A_INDR_HL [67]
                0.00    0.00       4/4           OR_B [69]
                0.00    0.00       2/2           SUB_d8 [70]
                0.00    0.00       2/2           AND_d8 [71]
                0.00    0.00       1/1           NOT_IMPL [72]
                0.00    0.00       2/2           CCF [74]
                0.00    0.00       4/4           SRL_A [75]
                0.00    0.00       2/2           LD_A_INDR_C [77]
                0.00    0.00       2/2           LD_L_d8 [79]
                0.00    0.00       1/1           AND_B [80]
                0.00    0.00       2/2           LD_E_A [81]
                0.00    0.00       1/1           INC_B [82]
                0.00    0.00       3/5           JR_r8 [78]
                0.00    0.00       1/1           LD_D_d8 [83]
                0.00    0.00       1/1           RRCA [88]
                0.00    0.00       1/1           LD_A_L [85]
                0.00    0.00       1/1           LD_D_A [86]
                0.00    0.00       1/1           LD_H_A [87]
                0.00    0.00       1/1           LDINDR_HL_d8 [89]
                0.00    0.00       1/1           LD_A_INDRHL [90]
                0.00    0.00       1/1           LD_B_INDRHL [91]
                0.00    0.00    1024/1024        DEC_BC [99]
                0.00    0.00     384/384         PUSH_BC [101]
                0.00    0.00     200/200         INC_HL [104]
                0.00    0.00      56/56          INC_DE [105]
                0.00    0.00      16/16          LDINDR_C_A [106]
                0.00    0.00       5/5           NOP [107]
                0.00    0.00       1/1           DI [108]
                0.00    0.00       1/1           LDINDR_HL_A [109]
-----------------------------------------------
                0.00    0.00       1/28966311     panic [73]
                0.00    0.00       1/28966311     LD_B_INDRHL [91]
                0.00    0.00       1/28966311     LD_A_INDRHL [90]
                0.00    0.00       1/28966311     LDINDR_HL_d8 [89]
                0.00    0.00       2/28966311     SUB_d8 [70]
                0.00    0.00       2/28966311     LD_A_INDR_C [77]
                0.00    0.00       2/28966311     AND_d8 [71]
                0.00    0.00       5/28966311     JR_r8 [78]
                0.00    0.00      12/28966311     indir_n_load [68]
                0.00    0.00      56/28966311     LD_A_INDR_DE [60]
                0.00    0.00     153/28966311     LDH_a8_A [58]
                0.00    0.00    1948/28966311     load_n_to_reg [40]
                0.00    0.00  762609/28966311     CP_d8 [7]
                0.00    0.00  789831/28966311     cond_jmp_r8 [18]
                0.00    0.00 1524866/28966311     LDH_A_a8 [17]
                0.01    0.00 2393701/28966311     cycle_cpu [5]
                0.06    0.00 23493120/28966311     renderScan [4]
[6]     20.5    0.08    0.00 28966311         readN [6]
-----------------------------------------------
                0.03    0.03  762609/762609      cycle_cpu [5]
[7]     14.0    0.03    0.03  762609         CP_d8 [7]
                0.02    0.01  762609/762609      comp [9]
                0.00    0.00  762609/28966311     readN [6]
-----------------------------------------------
                0.04    0.00 7831040/7831040     renderScan [4]
[8]     10.3    0.04    0.00 7831040         getColor [8]
-----------------------------------------------
                0.02    0.01  762609/762609      CP_d8 [7]
[9]      7.1    0.02    0.01  762609         comp [9]
                0.00    0.00  762609/794024      setZF [21]
                0.00    0.00  762609/794827      setNF [20]
                0.00    0.00  762609/794827      setHF [19]
                0.00    0.00  762609/765350      setCF [23]
-----------------------------------------------
                0.00    0.00       1/4010199     RRCA [88]
                0.00    0.00       2/4010199     getCF [84]
                0.00    0.00       4/4010199     SRL_A [75]
                0.00    0.00       4/4010199     LD_A_INDR_C [77]
                0.00    0.00       8/4010199     printCpu [76]
                0.00    0.00      12/4010199     indir_n_load [68]
                0.00    0.00      56/4010199     LD_A_INDR_DE [60]
                0.00    0.00     132/4010199     SUB_B [50]
                0.00    0.00     134/4010199     sub_n [51]
                0.00    0.00     148/4010199     inc_8_reg [52]
                0.00    0.00     157/4010199     JR_Z_r8 [59]
                0.00    0.00     200/4010199     LDINC_HL_A [57]
                0.00    0.00    1536/4010199     RLA [44]
                0.00    0.00    1536/4010199     RL [41]
                0.00    0.00    1948/4010199     load_n_to_reg [40]
                0.00    0.00    2056/4010199     or_reg [39]
                0.00    0.00    2520/4010199     move [43]
                0.00    0.00    8192/4010199     bit_n [31]
                0.00    0.00   21910/4010199     dec_8_reg [27]
                0.00    0.00   27036/4010199     LDDEC_HL_A [32]
                0.00    0.00  765350/4010199     setCF [23]
                0.00    0.00  793579/4010199     check_flag [22]
                0.00    0.00  794024/4010199     setZF [21]
                0.00    0.00  794827/4010199     setHF [19]
                0.00    0.00  794827/4010199     setNF [20]
[10]     2.6    0.01    0.00 4010199         getRegister [10]
-----------------------------------------------
                0.00    0.00       1/607         JP_INDRHL [37]
                0.00    0.00       2/607         LDINDR_a16_A [15]
                0.00    0.00       3/607         JP_a16 [33]
                0.00    0.00      19/607         load_nn_to_reg [26]
                0.00    0.00      99/607         CALL_a16 [24]
                0.00    0.00      99/607         RET [25]
                0.01    0.00     384/607         pop_r16 [14]
[11]     2.6    0.01    0.00     607         readNN [11]
-----------------------------------------------
                0.01    0.00  793579/793579      cycle_cpu [5]
[12]     2.3    0.01    0.00  793579         JR_NZ_r8 [12]
                0.00    0.00  793579/793579      cond_jmp_r8 [18]
                0.00    0.00  793579/793579      check_flag [22]
-----------------------------------------------
                0.00    0.01     384/384         cycle_cpu [5]
[13]     1.6    0.00    0.01     384         POP_BC [13]
                0.00    0.01     384/384         pop_r16 [14]
-----------------------------------------------
                0.00    0.01     384/384         POP_BC [13]
[14]     1.6    0.00    0.01     384         pop_r16 [14]
                0.01    0.00     384/607         readNN [11]
                0.00    0.00     384/28964       write_r16 [97]
-----------------------------------------------
                0.01    0.00       2/2           cycle_cpu [5]
[15]     1.3    0.01    0.00       2         LDINDR_a16_A [15]
                0.00    0.00       2/607         readNN [11]
                0.00    0.00       2/27409       writeN [98]
-----------------------------------------------
                0.01    0.00    1024/1024        cycle_cpu [5]
[16]     1.3    0.01    0.00    1024         OR_C [16]
                0.00    0.00    1024/1028        or_reg [39]
-----------------------------------------------
                0.00    0.00  762433/762433      cycle_cpu [5]
[17]     1.1    0.00    0.00  762433         LDH_A_a8 [17]
                0.00    0.00 1524866/28966311     readN [6]
-----------------------------------------------
                0.00    0.00  793579/793579      JR_NZ_r8 [12]
[18]     0.6    0.00    0.00  793579         cond_jmp_r8 [18]
                0.00    0.00  789831/28966311     readN [6]
-----------------------------------------------
                0.00    0.00       1/794827      AND_B [80]
                0.00    0.00       2/794827      CCF [74]
                0.00    0.00       2/794827      AND_d8 [71]
                0.00    0.00      33/794827      add_16_reg [64]
                0.00    0.00     134/794827      sub_n [51]
                0.00    0.00     148/794827      inc_8_reg [52]
                0.00    0.00     768/794827      RL [41]
                0.00    0.00    1028/794827      or_reg [39]
                0.00    0.00    8192/794827      bit_n [31]
                0.00    0.00   21910/794827      dec_8_reg [27]
                0.00    0.00  762609/794827      comp [9]
[19]     0.5    0.00    0.00  794827         setHF [19]
                0.00    0.00  794827/4010199     getRegister [10]
-----------------------------------------------
                0.00    0.00       1/794827      AND_B [80]
                0.00    0.00       2/794827      CCF [74]
                0.00    0.00       2/794827      AND_d8 [71]
                0.00    0.00      33/794827      add_16_reg [64]
                0.00    0.00     134/794827      sub_n [51]
                0.00    0.00     148/794827      inc_8_reg [52]
                0.00    0.00     768/794827      RL [41]
                0.00    0.00    1028/794827      or_reg [39]
                0.00    0.00    8192/794827      bit_n [31]
                0.00    0.00   21910/794827      dec_8_reg [27]
                0.00    0.00  762609/794827      comp [9]
[20]     0.5    0.00    0.00  794827         setNF [20]
                0.00    0.00  794827/4010199     getRegister [10]
-----------------------------------------------
                0.00    0.00       1/794024      AND_B [80]
                0.00    0.00       2/794024      AND_d8 [71]
                0.00    0.00     134/794024      sub_n [51]
                0.00    0.00     148/794024      inc_8_reg [52]
                0.00    0.00    1028/794024      or_reg [39]
                0.00    0.00    8192/794024      bit_n [31]
                0.00    0.00   21910/794024      dec_8_reg [27]
                0.00    0.00  762609/794024      comp [9]
[21]     0.5    0.00    0.00  794024         setZF [21]
                0.00    0.00  794024/4010199     getRegister [10]
-----------------------------------------------
                0.00    0.00  793579/793579      JR_NZ_r8 [12]
[22]     0.5    0.00    0.00  793579         check_flag [22]
                0.00    0.00  793579/4010199     getRegister [10]
-----------------------------------------------
                0.00    0.00       1/765350      RRCA [88]
                0.00    0.00       1/765350      AND_B [80]
                0.00    0.00       2/765350      CCF [74]
                0.00    0.00       2/765350      AND_d8 [71]
                0.00    0.00       4/765350      SRL_A [75]
                0.00    0.00      33/765350      add_16_reg [64]
                0.00    0.00     134/765350      sub_n [51]
                0.00    0.00     768/765350      RLA [44]
                0.00    0.00     768/765350      RL [41]
                0.00    0.00    1028/765350      or_reg [39]
                0.00    0.00  762609/765350      comp [9]
[23]     0.5    0.00    0.00  765350         setCF [23]
                0.00    0.00  765350/4010199     getRegister [10]
-----------------------------------------------
                0.00    0.00      99/99          cycle_cpu [5]
[24]     0.4    0.00    0.00      99         CALL_a16 [24]
                0.00    0.00      99/607         readNN [11]
                0.00    0.00      99/483         writeNN [100]
-----------------------------------------------
                0.00    0.00      99/99          cycle_cpu [5]
[25]     0.4    0.00    0.00      99         RET [25]
                0.00    0.00      99/607         readNN [11]
-----------------------------------------------
                0.00    0.00       1/19          LD_BC_d16 [38]
                0.00    0.00       2/19          LD_DE_d16 [35]
                0.00    0.00       3/19          LD_SP_d16 [34]
                0.00    0.00      13/19          LD_HL_d16 [28]
[26]     0.1    0.00    0.00      19         load_nn_to_reg [26]
                0.00    0.00      19/607         readNN [11]
                0.00    0.00      19/28964       write_r16 [97]
-----------------------------------------------
                0.00    0.00      25/21910       DEC_A [61]
                0.00    0.00     132/21910       DEC_D [53]
                0.00    0.00     264/21910       DEC_E [47]
                0.00    0.00    3259/21910       DEC_C [36]
                0.00    0.00   18230/21910       DEC_B [29]
[27]     0.1    0.00    0.00   21910         dec_8_reg [27]
                0.00    0.00   21910/4010199     getRegister [10]
                0.00    0.00   21910/794024      setZF [21]
                0.00    0.00   21910/794827      setNF [20]
                0.00    0.00   21910/794827      setHF [19]
-----------------------------------------------
                0.00    0.00      13/13          cycle_cpu [5]
[28]     0.1    0.00    0.00      13         LD_HL_d16 [28]
                0.00    0.00      13/19          load_nn_to_reg [26]
-----------------------------------------------
                0.00    0.00   18230/18230       cycle_cpu [5]
[29]     0.0    0.00    0.00   18230         DEC_B [29]
                0.00    0.00   18230/21910       dec_8_reg [27]
-----------------------------------------------
                0.00    0.00    8192/8192        cycle_cpu [5]
[30]     0.0    0.00    0.00    8192         BIT_7_H [30]
                0.00    0.00    8192/8192        bit_n [31]
-----------------------------------------------
                0.00    0.00    8192/8192        BIT_7_H [30]
[31]     0.0    0.00    0.00    8192         bit_n [31]
                0.00    0.00    8192/794024      setZF [21]
                0.00    0.00    8192/794827      setNF [20]
                0.00    0.00    8192/794827      setHF [19]
                0.00    0.00    8192/4010199     getRegister [10]
-----------------------------------------------
                0.00    0.00   27036/27036       cycle_cpu [5]
[32]     0.0    0.00    0.00   27036         LDDEC_HL_A [32]
                0.00    0.00   27036/4010199     getRegister [10]
                0.00    0.00   27036/29053       read_r16 [96]
                0.00    0.00   27036/27409       writeN [98]
                0.00    0.00   27036/28964       write_r16 [97]
-----------------------------------------------
                0.00    0.00       3/3           cycle_cpu [5]
[33]     0.0    0.00    0.00       3         JP_a16 [33]
                0.00    0.00       3/607         readNN [11]
-----------------------------------------------
                0.00    0.00       3/3           cycle_cpu [5]
[34]     0.0    0.00    0.00       3         LD_SP_d16 [34]
                0.00    0.00       3/19          load_nn_to_reg [26]
-----------------------------------------------
                0.00    0.00       2/2           cycle_cpu [5]
[35]     0.0    0.00    0.00       2         LD_DE_d16 [35]
                0.00    0.00       2/19          load_nn_to_reg [26]
-----------------------------------------------
                0.00    0.00    3259/3259        cycle_cpu [5]
[36]     0.0    0.00    0.00    3259         DEC_C [36]
                0.00    0.00    3259/21910       dec_8_reg [27]
-----------------------------------------------
                0.00    0.00       1/1           cycle_cpu [5]
[37]     0.0    0.00    0.00       1         JP_INDRHL [37]
                0.00    0.00       1/607         readNN [11]
                0.00    0.00       1/29053       read_r16 [96]
-----------------------------------------------
                0.00    0.00       1/1           cycle_cpu [5]
[38]     0.0    0.00    0.00       1         LD_BC_d16 [38]
                0.00    0.00       1/19          load_nn_to_reg [26]
-----------------------------------------------
                0.00    0.00       4/1028        OR_B [69]
                0.00    0.00    1024/1028        OR_C [16]
[39]     0.0    0.00    0.00    1028         or_reg [39]
                0.00    0.00    2056/4010199     getRegister [10]
                0.00    0.00    1028/794024      setZF [21]
                0.00    0.00    1028/794827      setNF [20]
                0.00    0.00    1028/794827      setHF [19]
                0.00    0.00    1028/765350      setCF [23]
-----------------------------------------------
                0.00    0.00       1/1948        LD_D_d8 [83]
                0.00    0.00       2/1948        LD_L_d8 [79]
                0.00    0.00     105/1948        LD_B_d8 [56]
                0.00    0.00     395/1948        LD_E_d8 [49]
                0.00    0.00     403/1948        LD_C_d8 [48]
                0.00    0.00    1042/1948        LD_A_d8 [45]
[40]     0.0    0.00    0.00    1948         load_n_to_reg [40]
                0.00    0.00    1948/28966311     readN [6]
                0.00    0.00    1948/4010199     getRegister [10]
-----------------------------------------------
                0.00    0.00     768/768         RL_C [42]
[41]     0.0    0.00    0.00     768         RL [41]
                0.00    0.00    1536/4010199     getRegister [10]
                0.00    0.00     768/765350      setCF [23]
                0.00    0.00     768/794827      setNF [20]
                0.00    0.00     768/794827      setHF [19]
-----------------------------------------------
                0.00    0.00     768/768         cycle_cpu [5]
[42]     0.0    0.00    0.00     768         RL_C [42]
                0.00    0.00     768/768         RL [41]
-----------------------------------------------
                0.00    0.00       1/1260        LD_A_L [85]
                0.00    0.00       1/1260        LD_H_A [87]
                0.00    0.00       1/1260        LD_D_A [86]
                0.00    0.00       2/1260        LD_E_A [81]
                0.00    0.00      48/1260        LD_C_A [65]
                0.00    0.00      50/1260        LD_A_E [62]
                0.00    0.00     133/1260        LD_A_H [55]
                0.00    0.00    1024/1260        LD_A_B [46]
[43]     0.0    0.00    0.00    1260         move [43]
                0.00    0.00    2520/4010199     getRegister [10]
-----------------------------------------------
                0.00    0.00     768/768         cycle_cpu [5]
[44]     0.0    0.00    0.00     768         RLA [44]
                0.00    0.00    1536/4010199     getRegister [10]
                0.00    0.00     768/765350      setCF [23]
-----------------------------------------------
                0.00    0.00    1042/1042        cycle_cpu [5]
[45]     0.0    0.00    0.00    1042         LD_A_d8 [45]
                0.00    0.00    1042/1948        load_n_to_reg [40]
-----------------------------------------------
                0.00    0.00    1024/1024        cycle_cpu [5]
[46]     0.0    0.00    0.00    1024         LD_A_B [46]
                0.00    0.00    1024/1260        move [43]
-----------------------------------------------
                0.00    0.00     264/264         cycle_cpu [5]
[47]     0.0    0.00    0.00     264         DEC_E [47]
                0.00    0.00     264/21910       dec_8_reg [27]
-----------------------------------------------
                0.00    0.00     403/403         cycle_cpu [5]
[48]     0.0    0.00    0.00     403         LD_C_d8 [48]
                0.00    0.00     403/1948        load_n_to_reg [40]
-----------------------------------------------
                0.00    0.00     395/395         cycle_cpu [5]
[49]     0.0    0.00    0.00     395         LD_E_d8 [49]
                0.00    0.00     395/1948        load_n_to_reg [40]
-----------------------------------------------
                0.00    0.00     132/132         cycle_cpu [5]
[50]     0.0    0.00    0.00     132         SUB_B [50]
                0.00    0.00     132/134         sub_n [51]
                0.00    0.00     132/4010199     getRegister [10]
-----------------------------------------------
                0.00    0.00       2/134         SUB_d8 [70]
                0.00    0.00     132/134         SUB_B [50]
[51]     0.0    0.00    0.00     134         sub_n [51]
                0.00    0.00     134/794024      setZF [21]
                0.00    0.00     134/794827      setNF [20]
                0.00    0.00     134/794827      setHF [19]
                0.00    0.00     134/765350      setCF [23]
                0.00    0.00     134/4010199     getRegister [10]
-----------------------------------------------
                0.00    0.00       1/148         INC_B [82]
                0.00    0.00      15/148         INC_C [66]
                0.00    0.00     132/148         INC_H [54]
[52]     0.0    0.00    0.00     148         inc_8_reg [52]
                0.00    0.00     148/4010199     getRegister [10]
                0.00    0.00     148/794024      setZF [21]
                0.00    0.00     148/794827      setNF [20]
                0.00    0.00     148/794827      setHF [19]
-----------------------------------------------
                0.00    0.00     132/132         cycle_cpu [5]
[53]     0.0    0.00    0.00     132         DEC_D [53]
                0.00    0.00     132/21910       dec_8_reg [27]
-----------------------------------------------
                0.00    0.00     132/132         cycle_cpu [5]
[54]     0.0    0.00    0.00     132         INC_H [54]
                0.00    0.00     132/148         inc_8_reg [52]
-----------------------------------------------
                0.00    0.00     133/133         cycle_cpu [5]
[55]     0.0    0.00    0.00     133         LD_A_H [55]
                0.00    0.00     133/1260        move [43]
-----------------------------------------------
                0.00    0.00     105/105         cycle_cpu [5]
[56]     0.0    0.00    0.00     105         LD_B_d8 [56]
                0.00    0.00     105/1948        load_n_to_reg [40]
-----------------------------------------------
                0.00    0.00     200/200         cycle_cpu [5]
[57]     0.0    0.00    0.00     200         LDINC_HL_A [57]
                0.00    0.00     200/4010199     getRegister [10]
                0.00    0.00     200/29053       read_r16 [96]
                0.00    0.00     200/27409       writeN [98]
                0.00    0.00     200/28964       write_r16 [97]
-----------------------------------------------
                0.00    0.00     153/153         cycle_cpu [5]
[58]     0.0    0.00    0.00     153         LDH_a8_A [58]
                0.00    0.00     153/28966311     readN [6]
                0.00    0.00     153/27409       writeN [98]
-----------------------------------------------
                0.00    0.00     157/157         cycle_cpu [5]
[59]     0.0    0.00    0.00     157         JR_Z_r8 [59]
                0.00    0.00     157/4010199     getRegister [10]
                0.00    0.00       2/5           JR_r8 [78]
-----------------------------------------------
                0.00    0.00      56/56          cycle_cpu [5]
[60]     0.0    0.00    0.00      56         LD_A_INDR_DE [60]
                0.00    0.00      56/28966311     readN [6]
                0.00    0.00      56/4010199     getRegister [10]
                0.00    0.00      56/29053       read_r16 [96]
-----------------------------------------------
                0.00    0.00      25/25          cycle_cpu [5]
[61]     0.0    0.00    0.00      25         DEC_A [61]
                0.00    0.00      25/21910       dec_8_reg [27]
-----------------------------------------------
                0.00    0.00      50/50          cycle_cpu [5]
[62]     0.0    0.00    0.00      50         LD_A_E [62]
                0.00    0.00      50/1260        move [43]
-----------------------------------------------
                0.00    0.00      33/33          cycle_cpu [5]
[63]     0.0    0.00    0.00      33         ADD_HL_DE [63]
                0.00    0.00      33/33          add_16_reg [64]
-----------------------------------------------
                0.00    0.00      33/33          ADD_HL_DE [63]
[64]     0.0    0.00    0.00      33         add_16_reg [64]
                0.00    0.00      33/765350      setCF [23]
                0.00    0.00      33/794827      setHF [19]
                0.00    0.00      33/794827      setNF [20]
                0.00    0.00      66/29053       read_r16 [96]
                0.00    0.00      33/28964       write_r16 [97]
-----------------------------------------------
                0.00    0.00      48/48          cycle_cpu [5]
[65]     0.0    0.00    0.00      48         LD_C_A [65]
                0.00    0.00      48/1260        move [43]
-----------------------------------------------
                0.00    0.00      15/15          cycle_cpu [5]
[66]     0.0    0.00    0.00      15         INC_C [66]
                0.00    0.00      15/148         inc_8_reg [52]
-----------------------------------------------
                0.00    0.00      12/12          cycle_cpu [5]
[67]     0.0    0.00    0.00      12         LDINC_A_INDR_HL [67]
                0.00    0.00      12/12          indir_n_load [68]
                0.00    0.00      12/29053       read_r16 [96]
                0.00    0.00      12/28964       write_r16 [97]
-----------------------------------------------
                0.00    0.00      12/12          LDINC_A_INDR_HL [67]
[68]     0.0    0.00    0.00      12         indir_n_load [68]
                0.00    0.00      12/28966311     readN [6]
                0.00    0.00      12/4010199     getRegister [10]
                0.00    0.00      12/29053       read_r16 [96]
-----------------------------------------------
                0.00    0.00       4/4           cycle_cpu [5]
[69]     0.0    0.00    0.00       4         OR_B [69]
                0.00    0.00       4/1028        or_reg [39]
-----------------------------------------------
                0.00    0.00       2/2           cycle_cpu [5]
[70]     0.0    0.00    0.00       2         SUB_d8 [70]
                0.00    0.00       2/134         sub_n [51]
                0.00    0.00       2/28966311     readN [6]
-----------------------------------------------
                0.00    0.00       2/2           cycle_cpu [5]
[71]     0.0    0.00    0.00       2         AND_d8 [71]
                0.00    0.00       2/28966311     readN [6]
                0.00    0.00       2/794024      setZF [21]
                0.00    0.00       2/794827      setNF [20]
                0.00    0.00       2/794827      setHF [19]
                0.00    0.00       2/765350      setCF [23]
-----------------------------------------------
                0.00    0.00       1/1           cycle_cpu [5]
[72]     0.0    0.00    0.00       1         NOT_IMPL [72]
                0.00    0.00       1/1           panic [73]
-----------------------------------------------
                0.00    0.00       1/1           NOT_IMPL [72]
[73]     0.0    0.00    0.00       1         panic [73]
                0.00    0.00       1/1           printCpu [76]
                0.00    0.00       1/28966311     readN [6]
-----------------------------------------------
                0.00    0.00       2/2           cycle_cpu [5]
[74]     0.0    0.00    0.00       2         CCF [74]
                0.00    0.00       2/794827      setNF [20]
                0.00    0.00       2/794827      setHF [19]
                0.00    0.00       2/765350      setCF [23]
                0.00    0.00       2/2           getCF [84]
-----------------------------------------------
                0.00    0.00       4/4           cycle_cpu [5]
[75]     0.0    0.00    0.00       4         SRL_A [75]
                0.00    0.00       4/765350      setCF [23]
                0.00    0.00       4/4010199     getRegister [10]
-----------------------------------------------
                0.00    0.00       1/1           panic [73]
[76]     0.0    0.00    0.00       1         printCpu [76]
                0.00    0.00       8/4010199     getRegister [10]
                0.00    0.00       2/29053       read_r16 [96]
-----------------------------------------------
                0.00    0.00       2/2           cycle_cpu [5]
[77]     0.0    0.00    0.00       2         LD_A_INDR_C [77]
                0.00    0.00       4/4010199     getRegister [10]
                0.00    0.00       2/28966311     readN [6]
-----------------------------------------------
                0.00    0.00       2/5           JR_Z_r8 [59]
                0.00    0.00       3/5           cycle_cpu [5]
[78]     0.0    0.00    0.00       5         JR_r8 [78]
                0.00    0.00       5/28966311     readN [6]
-----------------------------------------------
                0.00    0.00       2/2           cycle_cpu [5]
[79]     0.0    0.00    0.00       2         LD_L_d8 [79]
                0.00    0.00       2/1948        load_n_to_reg [40]
-----------------------------------------------
                0.00    0.00       1/1           cycle_cpu [5]
[80]     0.0    0.00    0.00       1         AND_B [80]
                0.00    0.00       1/794024      setZF [21]
                0.00    0.00       1/794827      setNF [20]
                0.00    0.00       1/794827      setHF [19]
                0.00    0.00       1/765350      setCF [23]
-----------------------------------------------
                0.00    0.00       2/2           cycle_cpu [5]
[81]     0.0    0.00    0.00       2         LD_E_A [81]
                0.00    0.00       2/1260        move [43]
-----------------------------------------------
                0.00    0.00       1/1           cycle_cpu [5]
[82]     0.0    0.00    0.00       1         INC_B [82]
                0.00    0.00       1/148         inc_8_reg [52]
-----------------------------------------------
                0.00    0.00       1/1           cycle_cpu [5]
[83]     0.0    0.00    0.00       1         LD_D_d8 [83]
                0.00    0.00       1/1948        load_n_to_reg [40]
-----------------------------------------------
                0.00    0.00       2/2           CCF [74]
[84]     0.0    0.00    0.00       2         getCF [84]
                0.00    0.00       2/4010199     getRegister [10]
-----------------------------------------------
                0.00    0.00       1/1           cycle_cpu [5]
[85]     0.0    0.00    0.00       1         LD_A_L [85]
                0.00    0.00       1/1260        move [43]
-----------------------------------------------
                0.00    0.00       1/1           cycle_cpu [5]
[86]     0.0    0.00    0.00       1         LD_D_A [86]
                0.00    0.00       1/1260        move [43]
-----------------------------------------------
                0.00    0.00       1/1           cycle_cpu [5]
[87]     0.0    0.00    0.00       1         LD_H_A [87]
                0.00    0.00       1/1260        move [43]
-----------------------------------------------
                0.00    0.00       1/1           cycle_cpu [5]
[88]     0.0    0.00    0.00       1         RRCA [88]
                0.00    0.00       1/765350      setCF [23]
                0.00    0.00       1/4010199     getRegister [10]
-----------------------------------------------
                0.00    0.00       1/1           cycle_cpu [5]
[89]     0.0    0.00    0.00       1         LDINDR_HL_d8 [89]
                0.00    0.00       1/28966311     readN [6]
                0.00    0.00       1/29053       read_r16 [96]
                0.00    0.00       1/27409       writeN [98]
-----------------------------------------------
                0.00    0.00       1/1           cycle_cpu [5]
[90]     0.0    0.00    0.00       1         LD_A_INDRHL [90]
                0.00    0.00       1/28966311     readN [6]
                0.00    0.00       1/29053       read_r16 [96]
-----------------------------------------------
                0.00    0.00       1/1           cycle_cpu [5]
[91]     0.0    0.00    0.00       1         LD_B_INDRHL [91]
                0.00    0.00       1/28966311     readN [6]
                0.00    0.00       1/29053       read_r16 [96]
-----------------------------------------------
                0.00    0.00       1/48945       init_gpu [111]
                0.00    0.00   48944/48945       renderScan [4]
[92]     0.0    0.00    0.00   48945         update_window [92]
-----------------------------------------------
                0.00    0.00   48944/48944       renderScan [4]
[93]     0.0    0.00    0.00   48944         background_map_addr [93]
-----------------------------------------------
                0.00    0.00   48944/48944       renderScan [4]
[94]     0.0    0.00    0.00   48944         tile_pattern_table_addr [94]
-----------------------------------------------
                0.00    0.00   48944/48944       renderScan [4]
[95]     0.0    0.00    0.00   48944         window_enabled [95]
-----------------------------------------------
                0.00    0.00       1/29053       LD_B_INDRHL [91]
                0.00    0.00       1/29053       LD_A_INDRHL [90]
                0.00    0.00       1/29053       LDINDR_HL_d8 [89]
                0.00    0.00       1/29053       JP_INDRHL [37]
                0.00    0.00       1/29053       LDINDR_HL_A [109]
                0.00    0.00       2/29053       printCpu [76]
                0.00    0.00      12/29053       indir_n_load [68]
                0.00    0.00      12/29053       LDINC_A_INDR_HL [67]
                0.00    0.00      56/29053       LD_A_INDR_DE [60]
                0.00    0.00      66/29053       add_16_reg [64]
                0.00    0.00     200/29053       LDINC_HL_A [57]
                0.00    0.00     256/29053       inc_16_reg [103]
                0.00    0.00     384/29053       push_r16 [102]
                0.00    0.00    1024/29053       DEC_BC [99]
                0.00    0.00   27036/29053       LDDEC_HL_A [32]
[96]     0.0    0.00    0.00   29053         read_r16 [96]
-----------------------------------------------
                0.00    0.00      12/28964       LDINC_A_INDR_HL [67]
                0.00    0.00      19/28964       load_nn_to_reg [26]
                0.00    0.00      33/28964       add_16_reg [64]
                0.00    0.00     200/28964       LDINC_HL_A [57]
                0.00    0.00     256/28964       inc_16_reg [103]
                0.00    0.00     384/28964       pop_r16 [14]
                0.00    0.00    1024/28964       DEC_BC [99]
                0.00    0.00   27036/28964       LDDEC_HL_A [32]
[97]     0.0    0.00    0.00   28964         write_r16 [97]
-----------------------------------------------
                0.00    0.00       1/27409       LDINDR_HL_d8 [89]
                0.00    0.00       1/27409       LDINDR_HL_A [109]
                0.00    0.00       2/27409       LDINDR_a16_A [15]
                0.00    0.00      16/27409       LDINDR_C_A [106]
                0.00    0.00     153/27409       LDH_a8_A [58]
                0.00    0.00     200/27409       LDINC_HL_A [57]
                0.00    0.00   27036/27409       LDDEC_HL_A [32]
[98]     0.0    0.00    0.00   27409         writeN [98]
-----------------------------------------------
                0.00    0.00    1024/1024        cycle_cpu [5]
[99]     0.0    0.00    0.00    1024         DEC_BC [99]
                0.00    0.00    1024/29053       read_r16 [96]
                0.00    0.00    1024/28964       write_r16 [97]
-----------------------------------------------
                0.00    0.00      99/483         CALL_a16 [24]
                0.00    0.00     384/483         push_r16 [102]
[100]    0.0    0.00    0.00     483         writeNN [100]
-----------------------------------------------
                0.00    0.00     384/384         cycle_cpu [5]
[101]    0.0    0.00    0.00     384         PUSH_BC [101]
                0.00    0.00     384/384         push_r16 [102]
-----------------------------------------------
                0.00    0.00     384/384         PUSH_BC [101]
[102]    0.0    0.00    0.00     384         push_r16 [102]
                0.00    0.00     384/29053       read_r16 [96]
                0.00    0.00     384/483         writeNN [100]
-----------------------------------------------
                0.00    0.00      56/256         INC_DE [105]
                0.00    0.00     200/256         INC_HL [104]
[103]    0.0    0.00    0.00     256         inc_16_reg [103]
                0.00    0.00     256/29053       read_r16 [96]
                0.00    0.00     256/28964       write_r16 [97]
-----------------------------------------------
                0.00    0.00     200/200         cycle_cpu [5]
[104]    0.0    0.00    0.00     200         INC_HL [104]
                0.00    0.00     200/256         inc_16_reg [103]
-----------------------------------------------
                0.00    0.00      56/56          cycle_cpu [5]
[105]    0.0    0.00    0.00      56         INC_DE [105]
                0.00    0.00      56/256         inc_16_reg [103]
-----------------------------------------------
                0.00    0.00      16/16          cycle_cpu [5]
[106]    0.0    0.00    0.00      16         LDINDR_C_A [106]
                0.00    0.00      16/27409       writeN [98]
-----------------------------------------------
                0.00    0.00       5/5           cycle_cpu [5]
[107]    0.0    0.00    0.00       5         NOP [107]
-----------------------------------------------
                0.00    0.00       1/1           cycle_cpu [5]
[108]    0.0    0.00    0.00       1         DI [108]
-----------------------------------------------
                0.00    0.00       1/1           cycle_cpu [5]
[109]    0.0    0.00    0.00       1         LDINDR_HL_A [109]
                0.00    0.00       1/29053       read_r16 [96]
                0.00    0.00       1/27409       writeN [98]
-----------------------------------------------
                0.00    0.00       1/1           main [2]
[110]    0.0    0.00    0.00       1         initCPU [110]
                0.00    0.00       1/1           mmu_load_boot_rom [115]
                0.00    0.00       1/1           init_jmp [112]
-----------------------------------------------
                0.00    0.00       1/1           main [2]
[111]    0.0    0.00    0.00       1         init_gpu [111]
                0.00    0.00       1/48945       update_window [92]
-----------------------------------------------
                0.00    0.00       1/1           initCPU [110]
[112]    0.0    0.00    0.00       1         init_jmp [112]
-----------------------------------------------
                0.00    0.00       1/1           main [2]
[113]    0.0    0.00    0.00       1         init_ppu [113]
-----------------------------------------------
                0.00    0.00       1/1           main [2]
[114]    0.0    0.00    0.00       1         loadCart [114]
-----------------------------------------------
                0.00    0.00       1/1           initCPU [110]
[115]    0.0    0.00    0.00       1         mmu_load_boot_rom [115]
-----------------------------------------------
                0.00    0.00       1/1           main [2]
[116]    0.0    0.00    0.00       1         printCard [116]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2020 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

  [63] ADD_HL_DE              [85] LD_A_L                 [84] getCF
  [80] AND_B                  [45] LD_A_d8                 [8] getColor
  [71] AND_d8                 [38] LD_BC_d16              [10] getRegister
  [30] BIT_7_H                [91] LD_B_INDRHL           [103] inc_16_reg
  [24] CALL_a16               [56] LD_B_d8                [52] inc_8_reg
  [74] CCF                    [65] LD_C_A                 [68] indir_n_load
   [7] CP_d8                  [48] LD_C_d8               [110] initCPU
  [61] DEC_A                  [35] LD_DE_d16             [111] init_gpu
  [29] DEC_B                  [86] LD_D_A                [112] init_jmp
  [99] DEC_BC                 [83] LD_D_d8               [113] init_ppu
  [36] DEC_C                  [81] LD_E_A                [114] loadCart
  [53] DEC_D                  [49] LD_E_d8                [40] load_n_to_reg
  [47] DEC_E                  [28] LD_HL_d16              [26] load_nn_to_reg
 [108] DI                     [87] LD_H_A                [115] mmu_load_boot_rom
  [82] INC_B                  [79] LD_L_d8                [43] move
  [66] INC_C                  [34] LD_SP_d16              [39] or_reg
 [105] INC_DE                [107] NOP                    [73] panic
  [54] INC_H                  [72] NOT_IMPL               [14] pop_r16
 [104] INC_HL                 [69] OR_B                  [116] printCard
  [37] JP_INDRHL              [16] OR_C                   [76] printCpu
  [33] JP_a16                 [13] POP_BC                [102] push_r16
  [12] JR_NZ_r8              [101] PUSH_BC                 [6] readN
  [59] JR_Z_r8                [25] RET                    [11] readNN
  [78] JR_r8                  [41] RL                     [96] read_r16
  [32] LDDEC_HL_A             [44] RLA                     [4] renderScan
  [17] LDH_A_a8               [42] RL_C                    [1] run_emulator
  [58] LDH_a8_A               [88] RRCA                   [23] setCF
  [67] LDINC_A_INDR_HL        [75] SRL_A                  [19] setHF
  [57] LDINC_HL_A             [50] SUB_B                  [20] setNF
 [106] LDINDR_C_A             [70] SUB_d8                 [21] setZF
 [109] LDINDR_HL_A            [64] add_16_reg             [51] sub_n
  [89] LDINDR_HL_d8           [93] background_map_addr    [94] tile_pattern_table_addr
  [15] LDINDR_a16_A           [31] bit_n                  [92] update_window
  [46] LD_A_B                 [22] check_flag             [95] window_enabled
  [62] LD_A_E                  [9] comp                   [98] writeN
  [55] LD_A_H                 [18] cond_jmp_r8           [100] writeNN
  [90] LD_A_INDRHL             [5] cycle_cpu              [97] write_r16
  [77] LD_A_INDR_C             [3] cycle_ppu
  [60] LD_A_INDR_DE           [27] dec_8_reg
